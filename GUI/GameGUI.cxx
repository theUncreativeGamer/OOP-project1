// generated by Fast Light User Interface Designer (fluid) version 1.0308

#include "GameGUI.h"

void GenerateNewBoard(const int& height, const int& width, const int& mineCount) {
  std::cout<<"Generating new board... (pls insert code here)"<<std::endl;
}

Fl_Double_Window *customGameWindow=(Fl_Double_Window *)0;

Fl_Value_Input *heightInputBox=(Fl_Value_Input *)0;

Fl_Value_Input *widthInputBox=(Fl_Value_Input *)0;

Fl_Input_Choice *generateTypeSwitch=(Fl_Input_Choice *)0;

Fl_Menu_Item menu_generateTypeSwitch[] = {
 {"Specific Mine Count", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Specific Spawn Chance", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Value_Input *mineCountBox=(Fl_Value_Input *)0;

Fl_Value_Input *mineChanceBox=(Fl_Value_Input *)0;

Fl_Button *okButton=(Fl_Button *)0;

static void cb_okButton(Fl_Button*, void*) {
  GenerateNewBoard(heightInputBox->value(), widthInputBox->value(), mineCountBox->value());
}

Fl_Button *cancelButton=(Fl_Button *)0;

static void cb_cancelButton(Fl_Button*, void*) {
  customGameWindow->hide();
}

Fl_Double_Window* MakeCustomBoardWindow() {
  { customGameWindow = new Fl_Double_Window(376, 204, "New Game Setup");
    { heightInputBox = new Fl_Value_Input(115, 15, 80, 30, "Height");
      heightInputBox->minimum(1);
      heightInputBox->maximum(99);
      heightInputBox->step(1);
      heightInputBox->value(10);
    } // Fl_Value_Input* heightInputBox
    { widthInputBox = new Fl_Value_Input(115, 50, 80, 30, "Width");
      widthInputBox->minimum(1);
      widthInputBox->maximum(99);
      widthInputBox->step(1);
      widthInputBox->value(10);
    } // Fl_Value_Input* widthInputBox
    { generateTypeSwitch = new Fl_Input_Choice(115, 85, 165, 30, "Generate Type");
      generateTypeSwitch->menu(menu_generateTypeSwitch);
    } // Fl_Input_Choice* generateTypeSwitch
    { mineCountBox = new Fl_Value_Input(115, 120, 80, 30, "Mine Count");
      mineCountBox->minimum(1);
      mineCountBox->maximum(999);
      mineCountBox->step(1);
      mineCountBox->value(10);
    } // Fl_Value_Input* mineCountBox
    { mineChanceBox = new Fl_Value_Input(115, 120, 80, 30, "Mine Chance");
      mineChanceBox->minimum(0.01);
      mineChanceBox->hide();
      mineChanceBox->deactivate();
    } // Fl_Value_Input* mineChanceBox
    { okButton = new Fl_Button(165, 160, 90, 30, "OK");
      okButton->callback((Fl_Callback*)cb_okButton);
    } // Fl_Button* okButton
    { cancelButton = new Fl_Button(270, 160, 90, 30, "Cancel");
      cancelButton->callback((Fl_Callback*)cb_cancelButton);
    } // Fl_Button* cancelButton
    customGameWindow->end();
  } // Fl_Double_Window* customGameWindow
  return customGameWindow;
}

Fl_Double_Window *mainWindow=(Fl_Double_Window *)0;

static void cb_mainWindow(Fl_Double_Window*, void*) {
  std::cout<<"Closing main window!!!"<<std::endl;
mainWindow->hide();
}

Fl_Menu_Bar *menuBar=(Fl_Menu_Bar *)0;

static void cb_customGameOption(Fl_Menu_*, void*) {
  customGameWindow = MakeCustomBoardWindow();
customGameWindow->show();
std::cout<<"Make a new windoe!"<<std::endl;
}

Fl_Menu_Item menu_menuBar[] = {
 {"New Game", 0,  0, 0, 64, (uchar)FL_SHADOW_LABEL, 13, 18, 0},
 {"Custom", 0,  (Fl_Callback*)cb_customGameOption, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Group *gameArea=(Fl_Group *)0;

int main(int argc, char **argv) {
  { mainWindow = new Fl_Double_Window(350, 400, "Minesweeper");
    mainWindow->callback((Fl_Callback*)cb_mainWindow);
    { menuBar = new Fl_Menu_Bar(0, 0, 350, 30, "Tool Bar");
      menuBar->menu(menu_menuBar);
    } // Fl_Menu_Bar* menuBar
    { gameArea = new Fl_Group(0, 75, 350, 325);
      gameArea->box(FL_BORDER_BOX);
      gameArea->end();
      Fl_Group::current()->resizable(gameArea);
    } // Fl_Group* gameArea
    mainWindow->end();
  } // Fl_Double_Window* mainWindow
  mainWindow->show(argc, argv);
  return Fl::run();
}
